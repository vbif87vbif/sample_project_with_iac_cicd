---
- name: Install extra packages
  apt: name={{ item }} state=present update_cache=yes
  with_items:
    - "gnupg2"
    - "ca-certificates"
    - "lsb-release"
    - "ubuntu-keyring"
    - "libpcre2-8-0"

- name: Adding APT repository key
  apt_key:
    url: "http://nginx.org/keys/nginx_signing.key"

- name: Add official APT repository
  apt_repository:
    repo: "deb http://nginx.org/packages/mainline/ubuntu/ bionic nginx"
    update_cache: yes

- name: Install Nginx
  apt: name="nginx={{nginx_version}}" state=present

- name: Remove default nginx config
  file: name=/etc/nginx/conf.d/default.conf state=absent

- name: Change permissions for '/var/log/nginx'
  file:
    dest: "/var/log/nginx/"
    owner: 'www-data'
    group: 'www-data'
    recurse: true 
    # supposed to set directories to 755 and files to 644
    mode: u=rw,g=r,o=r

- name: Call letsencrypt role
  include_role:
    name: letsencrypt
  when: "{{ enable_ssl }}|default(false)|bool"

## replace main nginx config file if clause (ansible_ssh_user == 'root')
- name: copy nginx.conf to server
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    mode: 0640
  notify:
    - nginx_reload

## replace fastcgi params
- name: replace fastcgi_params to server
  template:
    src: "fastcgi_params.j2"
    dest: "/etc/nginx/fastcgi_params"
    mode: 0640
  notify:
    - nginx_reload

## create vhost config files
- name: copy vhosts configuration to server
  template:
      src: "nginx_vhost.conf.j2"
      dest: "/etc/nginx/conf.d/nginx_vhost{{my_idx+1}}.conf"
      mode: 0640
  loop: "{{ lookup('dict', vhs, wantlist=True) }}"
  loop_control:
    index_var: my_idx
  notify:
    - nginx_reload

## create html subfolder
- name: create folder for static data vhost
  file:
    path: "/var/www/{{hostname}}/{{item.key}}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
    recurse: yes
  loop: "{{ lookup('dict', vhs, wantlist=True) }}"
  loop_control:
    index_var: my_idx

- name: enable service nginx
  systemd:
    name: nginx
    enabled: yes
    masked: no

- name: restart nginx
  service:
    name: nginx
    state: restarted